name: Organize LeetCode Solutions

# Trigger the workflow when new folders are added to main branch
on:
  push:
    branches: [ main ]
    paths:
      - '*/**'           # Any file inside any new root-level directory
      - '!*'             # Exclude individual files in root
      - '!solutions/**'
      - '!.github/**'

# Grant write permissions to repository contents
permissions:
  contents: write

jobs:
  organize-solutions:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Check out the repository code
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history so we can detect changes
        fetch-depth: 0
        # Use a token that can push back to the repo
        token: ${{ secrets.GITHUB_TOKEN }}
    
    # Step 2: Configure git for commits
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    # Step 3: Find and move new folders
    - name: Organize solutions
      run: |
        # Flag to track if we made any changes
        CHANGES_MADE=false
        # Array to track moved folders
        MOVED_FOLDERS=()
        
        # Loop through all items in root directory
        for item in *; do
          # Check if it's a directory and not in our exclusion list
          if [ -d "$item" ] && [ "$item" != ".git" ] && [ "$item" != "solutions" ] && [ "$item" != ".github" ]; then
            echo "Moving folder: $item to solutions/"
            # Remove existing folder if it exists
            if [ -d "solutions/$item" ]; then
              rm -rf "solutions/$item"
            fi
            mv "$item" solutions/
            MOVED_FOLDERS+=("$item")
            CHANGES_MADE=true
          fi
        done
        
        # Convert array to space-separated string for commit message
        MOVED_FOLDERS_STR=$(IFS=' '; echo "${MOVED_FOLDERS[*]}")
        
        # Set outputs for next step
        echo "changes_made=$CHANGES_MADE" >> $GITHUB_OUTPUT
        echo "moved_folders=$MOVED_FOLDERS_STR" >> $GITHUB_OUTPUT
      id: organize
    
    # Step 4: Commit and push changes (only if changes were made)
    - name: Commit and push changes
      if: steps.organize.outputs.changes_made == 'true'
      run: |
        git add .
        git commit -m "chore: move ${{ steps.organize.outputs.moved_folders }} to solutions/"
        git push origin main